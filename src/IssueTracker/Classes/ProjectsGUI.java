package IssueTracker.Classes;

import java.util.Iterator;
import java.util.LinkedList;

public class ProjectsGUI extends javax.swing.JFrame {
    LinkedList<Project> Projects = new LinkedList<Project>();
    LinkedList<Issue> listOfIssues = new LinkedList<Issue>();
    
    public ProjectsGUI(LinkedList<Project> p) {
        initComponents();
        
        // Set the different filters
        this.ddFilter.add("All");
        this.ddFilter.add("Open");
        this.ddFilter.add("In Progress");
        this.ddFilter.add("In Review");
        this.ddFilter.add("Closed");
        
        this.Projects = p;
        
        // Add all to the list of projects
        // Add in the format: "Project Name"  |  "Total # issues"   |  "Estimated Time"
        for(Project project : p){
            String text = project.name + " | " + project.getOutstanding() + " | " + project.getEstimate();
            this.listProjects.add(text);
        }    
    }
    
    // Function that returns the currently selected project
    public Project getSelectedProject(){
        int selectedIndex = this.listProjects.getSelectedIndex();
        
        // Retrieve project from linked list and return it
        return Projects.get(selectedIndex);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CreateIssue = new javax.swing.JFrame();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnAddProject = new javax.swing.JButton();
        txtProjectBottom = new javax.swing.JTextField();
        txtIssueBottom = new javax.swing.JTextField();
        btnAddIssue = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        btnListIssues = new javax.swing.JButton();
        btnDeleteProject = new javax.swing.JButton();
        btnDisplay = new javax.swing.JButton();
        btnDeleteIssue = new javax.swing.JButton();
        listProjects = new java.awt.List();
        listIssues = new java.awt.List();
        txtOutput = new java.awt.TextArea();
        ddFilter = new java.awt.Choice();

        javax.swing.GroupLayout CreateIssueLayout = new javax.swing.GroupLayout(CreateIssue.getContentPane());
        CreateIssue.getContentPane().setLayout(CreateIssueLayout);
        CreateIssueLayout.setHorizontalGroup(
            CreateIssueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        CreateIssueLayout.setVerticalGroup(
            CreateIssueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Projects");

        jLabel2.setText("Issues");

        jLabel3.setText("Output");

        btnAddProject.setText("Add Project");
        btnAddProject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddProjectActionPerformed(evt);
            }
        });

        btnAddIssue.setText("Add Issue");
        btnAddIssue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddIssueActionPerformed(evt);
            }
        });

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnListIssues.setText("List Issues");
        btnListIssues.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListIssuesActionPerformed(evt);
            }
        });

        btnDeleteProject.setText("Delete");
        btnDeleteProject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteProjectActionPerformed(evt);
            }
        });

        btnDisplay.setText("Display");
        btnDisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisplayActionPerformed(evt);
            }
        });

        btnDeleteIssue.setText("Delete");
        btnDeleteIssue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteIssueActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtProjectBottom)
                            .addComponent(btnAddProject, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                            .addComponent(listProjects, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnListIssues, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDeleteProject, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ddFilter, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel1))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtIssueBottom, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel2)
                                .addGap(137, 137, 137))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(listIssues, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnDeleteIssue, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(txtOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAddIssue, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSearch)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtOutput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnDisplay)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDeleteIssue))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ddFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)
                        .addComponent(btnListIssues)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 91, Short.MAX_VALUE)
                        .addComponent(btnDeleteProject))
                    .addComponent(listProjects, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(listIssues, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(txtIssueBottom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSearch)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnAddIssue))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(txtProjectBottom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAddProject)))
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddProjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddProjectActionPerformed
        String projectName = this.txtProjectBottom.getText();
        
        // Add the project to our linked list and the list
        Project tmp = new Project(projectName);
        Projects.add(tmp);
        
        String text = projectName + " | " + tmp.getOutstanding() + " | " + tmp.getEstimate();
        this.listProjects.add(text);
    }//GEN-LAST:event_btnAddProjectActionPerformed

    private void btnListIssuesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListIssuesActionPerformed
        // Get all the issues based off the filter and place them in the issues list
        String filter = this.ddFilter.getSelectedItem();
        
        System.out.println(filter);
        
        Project selectedProject = this.getSelectedProject();
        
        LinkedList<Issue> issues = selectedProject.getIssues(filter);
        
        this.listIssues.removeAll();
        
        Iterator<Issue> ite = issues.iterator();
        while(ite.hasNext()){
            Issue currObj = ite.next();
            
            // String should be formatted as:  "Issues Number"  |  "Issue Title"
            String text = currObj.number + " | " + currObj.title;
            this.listIssues.add(text);
        }
        
        this.listOfIssues = issues;
    }//GEN-LAST:event_btnListIssuesActionPerformed

    private void btnDeleteProjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteProjectActionPerformed
        // Delete the selected project
        int selected = this.listProjects.getSelectedIndex();
         
        // Delete the project from the LinkedList of Projects
        Projects.get(selected).destroyProject();
        Projects.remove(selected);
         
        this.listProjects.remove(selected);
        this.listIssues.removeAll();
        this.txtOutput.setText("");
    }//GEN-LAST:event_btnDeleteProjectActionPerformed

    private void btnAddIssueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddIssueActionPerformed
        // Open other frame and allow the user to create an issue
         
        Issue i = new Issue("Template Issue");
        i.description = "Didn't have time to complete add issue functionality";
        i.number = (int)Math.random()*100;
        i.priority = "Critical";
        i.status = "Open";
        i.type = "Task";
        i.timeEstimate = 15;

    }//GEN-LAST:event_btnAddIssueActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
         String searchTerm = this.txtIssueBottom.getText();
         
         // Search for the specific issue here and display it in the issues list
         LinkedList<Issue> foundIssues = this.getSelectedProject().search(searchTerm);
         
        this.listIssues.removeAll();
        
        Iterator<Issue> ite = foundIssues.iterator();
        while(ite.hasNext()){
            Issue currObj = ite.next();
            
            // String should be formatted as:  "Issues Number"  |  "Issue Title"
            String text = currObj.number + " | " + currObj.title;
            this.listIssues.add(text);
        }
        
        this.listOfIssues = foundIssues;
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnDisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisplayActionPerformed
        int indexOfSelected = this.listIssues.getSelectedIndex();
         
        // Display the information in the ouput
        Issue currSelected = this.listOfIssues.get(indexOfSelected);
        
        String text = "Title: " + currSelected.title + "\n";
        text += "Type: " + currSelected.type + "\n";
        text += "Description: " + currSelected.description + "\n";
        text += "Priority: " + currSelected.priority + "\n";
        text += "Time Estimate: " + currSelected.timeEstimate + "\n";
        text += "Status: " + currSelected.status;
        
        this.txtOutput.setText(text);
    }//GEN-LAST:event_btnDisplayActionPerformed

    private void btnDeleteIssueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteIssueActionPerformed
        int issueIndex = this.listIssues.getSelectedIndex();
        
        // Remove the specific issue from the LinkedList in the specific Project
        this.getSelectedProject().delete(this.listOfIssues.get(issueIndex).number);
        
        this.listIssues.remove(issueIndex);
    }//GEN-LAST:event_btnDeleteIssueActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFrame CreateIssue;
    private javax.swing.JButton btnAddIssue;
    private javax.swing.JButton btnAddProject;
    private javax.swing.JButton btnDeleteIssue;
    private javax.swing.JButton btnDeleteProject;
    private javax.swing.JButton btnDisplay;
    private javax.swing.JButton btnListIssues;
    private javax.swing.JButton btnSearch;
    private java.awt.Choice ddFilter;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private java.awt.List listIssues;
    private java.awt.List listProjects;
    private javax.swing.JTextField txtIssueBottom;
    private java.awt.TextArea txtOutput;
    private javax.swing.JTextField txtProjectBottom;
    // End of variables declaration//GEN-END:variables
}
